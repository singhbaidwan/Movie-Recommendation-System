# -*- coding: utf-8 -*-
"""Recommendation_System.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1T4CUB3xhWnx5AA7uSrWyuGOlva8I1N3V

Importing the dependencies
"""

import numpy as np
import pandas as pd
import difflib
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity

import seaborn

"""Data Collection and Pre - Processing

"""

movies_data = pd.read_csv('/content/movies.csv')

movies_data.head(10)

print(movies_data.columns)

selected_features = ['genres','keywords','tagline','cast','director','overview','vote_average']

#replacing NULL values
for features in selected_features:
  movies_data[features] = movies_data[features].fillna('')

all_features = movies_data['genres']+' '+movies_data['keywords'] + ' '+movies_data['tagline']+' '+movies_data['cast']+' '+movies_data['director']+' '+movies_data['overview']+' '+str(movies_data['vote_average'])

print(all_features)

#feature vector
vectorizer = TfidfVectorizer()
feature_vector = vectorizer.fit_transform(all_features)

print(feature_vector)

"""Cosine Similarity"""

similarity_score = cosine_similarity(feature_vector)

print(similarity_score)

"""Taking User Inputs"""

movie_name = input('Enter movie name : ')

list_of_titles = movies_data['title'].tolist()
print(list_of_titles)

close_match = difflib.get_close_matches(movie_name,list_of_titles)
print(close_match)

index_of_movie = movies_data[movies_data.title == close_match[0]]['index'].values[0]
print(index_of_movie)

"""Getting List of similar Movies"""

similarity = list(enumerate(similarity_score[index_of_movie]))
print(similarity)

sorted_similarity = sorted(similarity,key = lambda x:x[1],reverse=True)
print(sorted_similarity)

print('Movies Suggested : \n')
counter = 1
for x in sorted_similarity:
  index = x[0]
  title = movies_data[movies_data.index==index]['title'].values[0]
  if(counter<21):
    print(counter,' ',title)
    counter+=1

